/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulation;

import java.util.stream.IntStream;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nour eldein
 */
public class JASD extends javax.swing.JFrame {
    
   
static int rows1,rows2;static String s5,s6;

    /**
     * Creates new form JASD
     */
    DefaultTableModel model,model1;
    String type,type1;
    
    public JASD(int rows,int rows2,String col,String col2) {
        
        rows1=rows;
        type=col;
        type1=col2;
        initComponents();
        model1 =new DefaultTableModel();
         model =new DefaultTableModel();
         model1.setRowCount(rows2);
        Home1 obj=new Home1();
        model.setRowCount(rows);
        
        model1.addColumn("Lead Time");
        
        model.addColumn("Demand");
        model.addColumn(col);
        model1.addColumn(col2);
        Table1.setModel(model);
        Table2.setModel(model1);
        
       

        
        
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Submit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        Table1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Deamand"
            }
        ));
        Table1.setShowGrid(true);
        jScrollPane2.setViewportView(Table1);

        Table2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table2.setShowGrid(true);
        jScrollPane1.setViewportView(Table2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        int i,table1=Table1.getRowCount(),table2=Table2.getRowCount();
        Object[] rowData = new Object[Table1.getRowCount()];
        
         Object[] rowData2 = new Object[Table2.getRowCount()];
         Object[] coulmnData=new Object[Table1.getRowCount()];
         Object[] coulmnData2=new Object[Table2.getRowCount()];
        double prob[]=new double[Table1.getRowCount()];
         double prob1[]=new double [Table2.getRowCount()];
        if (Table1.isEditing())
    Table1.getCellEditor().stopCellEditing();
        if (Table2.isEditing())
    Table2.getCellEditor().stopCellEditing();
        
for (i =0; i <Table1.getRowCount() || i<Table2.getRowCount(); i++) {
    {
        if(i<Table1.getRowCount())
        {rowData[i] = Table1.getValueAt(i,0);
      
        coulmnData[i] =Table1.getValueAt(i, 1);
        prob[i]=(double)Double.parseDouble(coulmnData[i].toString());
          
        
        }
        
        if(i<Table2.getRowCount()){
    rowData2[i] = Table2.getValueAt(i,0);
     coulmnData2[i] =Table2.getValueAt(i, 1);
     
    }
        
    }
    
     
  
       




         }

if(type=="Frequency"){
     
   
int sum = 0;
       
    for (i =0; i <Table1.getRowCount() ; i++) 
    {
        sum+=Integer.parseInt(coulmnData[i].toString());
        
  
    }
    prob=Simulation.Frequency_to_probabilty(Table1.getRowCount(), prob, sum);
    Simulation.Probability_to_cumulative(Table1.getRowCount(),prob);
   
    
  
        
    
     
}
    }//GEN-LAST:event_SubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JASD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JASD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JASD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JASD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             
                new JASD(rows1,rows2,s5,s6).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Submit;
    private javax.swing.JTable Table1;
    private javax.swing.JTable Table2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
